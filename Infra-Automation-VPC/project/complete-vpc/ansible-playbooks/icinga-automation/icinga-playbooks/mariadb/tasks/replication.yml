---
- name: ensure replication user exists on master
  mysql_user: >-
    name={{ mariadb_replication_user.name }}
    host={{ mariadb_replication_user.host | default('localhost') }}
    password={{ mariadb_replication_user.password }}
    priv={{ mariadb_replication_user.priv | default('*.*:USAGE') }}
    state={{ mariadb_replication_user.state | default('present') }}
  when: mariadb_replication_role == 'master' and mariadb_replication_user

- name: check slave status
  mysql_replication: mode=getslave
  ignore_errors: True
  register: mariadb_slave
  when: >-
    mariadb_replication_role == 'slave' and mariadb_replication_master != ""

- name: check master status
  mysql_replication: mode=getmaster
  delegate_to: "{{ mariadb_replication_master }}"
  register: mariadb_master
  when: >-
    mariadb_slave|failed
    and mariadb_replication_role == "slave"
    and mariadb_replication_master != ""

- name: configure slave replication
  mysql_replication: >-
    mode=changemaster
    master_host="{{ mariadb_replication_master }}"
    master_user="{{ mariadb_replication_user.name }}"
    master_password="{{ mariadb_replication_user.password }}"
    master_log_file="{{ mariadb_master.File }}"
    master_log_pos="{{ mariadb_master.Postion }}"
  ignore_errors: True
  when: >-
    mariadb_slave|failed
    and mariadb_replication_role == "slave"
    and mariadb_replication_master != ""
    and mariadb_replication_user

- name: start replication
  mysql_replication: mode=startslave
  when: >-
    mariadb_slave|failed
    and mariadb_replication_role == "slave"
    and mariadb_replication_master != ""
